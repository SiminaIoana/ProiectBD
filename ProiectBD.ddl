-- Generated by Oracle SQL Developer Data Modeler 24.3.0.240.1210
--   at:        2024-12-29 14:26:52 EET
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE categorie (
    id_categorie   NUMBER(3)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 100 NOCACHE ORDER )
    NOT NULL,
    nume_categorie VARCHAR2(40) NOT NULL
)
LOGGING;

ALTER TABLE categorie
    ADD CONSTRAINT categorie_id_categorie_ck CHECK ( REGEXP_LIKE ( id_categorie,
                                                                   '^\d{3}$' ) );

ALTER TABLE categorie
    ADD CONSTRAINT categorie_nume_categorie_ck CHECK ( REGEXP_LIKE ( nume_categorie,
                                                                     '^[A-Za-z\s-]+$' ) );

ALTER TABLE categorie ADD CONSTRAINT categorie_pk PRIMARY KEY ( id_categorie );

CREATE TABLE clienti (
    id_client   NUMBER(3)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 500 NOCACHE ORDER )
    NOT NULL,
    nume_client VARCHAR2(50) NOT NULL
)
LOGGING;

ALTER TABLE clienti
    ADD CONSTRAINT clienti_id_client_ck CHECK ( REGEXP_LIKE ( id_client,
                                                              '^\d{3}$' ) );

ALTER TABLE clienti
    ADD CONSTRAINT clienti_nume_client_ck CHECK ( REGEXP_LIKE ( nume_client,
                                                                '^[A-Za-zăîâșțĂÎÂȘȚ ]+$' ) );

ALTER TABLE clienti ADD CONSTRAINT clienti_pk PRIMARY KEY ( id_client );

ALTER TABLE clienti ADD CONSTRAINT clienti_nume_client_un UNIQUE ( nume_client );

CREATE TABLE comanda (
    id_comanda     NUMBER(3)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 300 NOCACHE ORDER )
    NOT NULL,
    data_comanda   DATE NOT NULL,
    id_client      NUMBER(3) NOT NULL,
    metoda_plata   VARCHAR2(5) NOT NULL,
    metoda_livrare VARCHAR2(8) NOT NULL
)
LOGGING;

ALTER TABLE comanda
    ADD CONSTRAINT comanda_id_comanda_ck CHECK ( REGEXP_LIKE ( id_comanda,
                                                               '^\d{3}$' ) );

ALTER TABLE comanda
    ADD CONSTRAINT comanda_metoda_plata_ck CHECK ( REGEXP_LIKE ( metoda_plata,
                                                                 '^(cash|card)$' ) );

ALTER TABLE comanda
    ADD CONSTRAINT comanda_metoda_livrare_ck CHECK ( REGEXP_LIKE ( metoda_livrare,
                                                                   '^(curier|posta)$' ) );

ALTER TABLE comanda ADD CONSTRAINT comanda_pk PRIMARY KEY ( id_comanda );

CREATE TABLE detalii_clienti (
    email              VARCHAR2(30) NOT NULL,
    adresa             VARCHAR2(30),
    nr_telefon         VARCHAR2(10) NOT NULL,
    data_nasterii      DATE NOT NULL,
    data_inregistrarii DATE,
    id_client          NUMBER(3) NOT NULL
)
LOGGING;

ALTER TABLE detalii_clienti
    ADD CONSTRAINT detalii_clienti_email_ck CHECK ( REGEXP_LIKE ( email,
                                                                  '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) );

ALTER TABLE detalii_clienti
    ADD CONSTRAINT detalii_clienti_nr_telefon_ck CHECK ( REGEXP_LIKE ( nr_telefon,
                                                                       '^\+?\d{10,15}$' ) );

CREATE UNIQUE INDEX detalii_clienti__idx ON
    detalii_clienti (
        id_client
    ASC )
        LOGGING;

ALTER TABLE detalii_clienti ADD CONSTRAINT detalii_clienti_email_un UNIQUE ( email );

ALTER TABLE detalii_clienti ADD CONSTRAINT detalii_clienti_adresa_un UNIQUE ( adresa );

ALTER TABLE detalii_clienti ADD CONSTRAINT detalii_clienti_nr_telefon_un UNIQUE ( nr_telefon );

CREATE TABLE detalii_comanda (
    id_produs  NUMBER(3) NOT NULL,
    id_comanda NUMBER(3) NOT NULL,
    cantitate  NUMBER(2) NOT NULL
)
LOGGING;

ALTER TABLE detalii_comanda ADD CONSTRAINT detalii_comanda_pk PRIMARY KEY ( id_produs,
                                                                            id_comanda );

CREATE TABLE produse (
    id_produs    NUMBER(3)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 200 NOCACHE ORDER )
    NOT NULL,
    nume_produs  VARCHAR2(35) NOT NULL,
    pret         NUMBER(3) NOT NULL,
    stoc         NUMBER(4) NOT NULL,
    id_categorie NUMBER(3) NOT NULL
)
LOGGING;

ALTER TABLE produse
    ADD CONSTRAINT produse_id_prod_ck CHECK ( REGEXP_LIKE ( id_produs,
                                                            '^\d{3}$' ) );

ALTER TABLE produse
    ADD CONSTRAINT produse_nume_produs_ck CHECK ( REGEXP_LIKE ( nume_produs,
                                                                '^[A-Za-zăîâșțĂÎÂȘȚ ]+$' ) );

ALTER TABLE produse
    ADD CONSTRAINT produse_pret_ck CHECK ( REGEXP_LIKE ( pret,
                                                         '^(100|[1-9][0-9]{2}|1000)$' ) );

ALTER TABLE produse
    ADD CONSTRAINT produse_stoc_ck CHECK ( REGEXP_LIKE ( stoc,
                                                         '^[0-9]+$' ) );

ALTER TABLE produse ADD CONSTRAINT produse_pk PRIMARY KEY ( id_produs );

ALTER TABLE comanda
    ADD CONSTRAINT comanda_clienti_fk
        FOREIGN KEY ( id_client )
            REFERENCES clienti ( id_client )
            NOT DEFERRABLE;

ALTER TABLE detalii_clienti
    ADD CONSTRAINT detalii_clienti_clienti_fk
        FOREIGN KEY ( id_client )
            REFERENCES clienti ( id_client )
            NOT DEFERRABLE;

ALTER TABLE detalii_comanda
    ADD CONSTRAINT detalii_comanda_comanda_fk
        FOREIGN KEY ( id_comanda )
            REFERENCES comanda ( id_comanda )
            NOT DEFERRABLE;

ALTER TABLE detalii_comanda
    ADD CONSTRAINT detalii_comanda_produse_fk
        FOREIGN KEY ( id_produs )
            REFERENCES produse ( id_produs )
            NOT DEFERRABLE;

ALTER TABLE produse
    ADD CONSTRAINT produse_categorie_fk
        FOREIGN KEY ( id_categorie )
            REFERENCES categorie ( id_categorie )
            NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER trg_comanda_data_comanda 
    BEFORE INSERT OR UPDATE ON COMANDA 
    FOR EACH ROW 
BEGIN
   IF(:new.data_comanda < SYSDATE )
   THEN 
   	RAISE_APPLICATION_ERROR(-20001,
   		'Data invalida: ' || TO_CHAR( :new.data_comanda, 'DD.MM.YYYY HH24:MI:SS' ) || ' trebuie sa fie mai mare decat data curenta.' );
   END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_det_clienti_d_inregistrarii 
    BEFORE INSERT OR UPDATE ON DETALII_CLIENTI 
    FOR EACH ROW 
BEGIN
    -- Verificăm dacă data_inregistrarii este mai mică decât 1 ianuarie 2020
    IF :NEW.data_inregistrarii < TO_DATE('2020-01-01', 'YYYY-MM-DD')
    THEN
        RAISE_APPLICATION_ERROR(-20001, 'data_inregistrarii nu poate fi mai mică decât 1 ianuarie 2020.');
    END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_det_clienti_d_nasterii 
    BEFORE INSERT OR UPDATE ON DETALII_CLIENTI 
    FOR EACH ROW 
BEGIN
   IF(:new.data_nasterii > ADD_MONTHS(SYSDATE, -16 * 12)) THEN
      RAISE_APPLICATION_ERROR(-20001,
        'Data invalida: ' || TO_CHAR(:new.data_nasterii, 'DD.MM.YYYY') || 
        ' - Persoana trebuie sa aiba cel putin 16 ani.');
   END IF;
END; 
/


drop table clienti CASCADE CONSTRAINTS;
drop table detalii_clienti  CASCADE CONSTRAINTS;
drop table comanda  CASCADE CONSTRAINTS;
drop table detalii_comanda cascade constraints;
drop table produse  CASCADE CONSTRAINTS;
drop table categorie  CASCADE CONSTRAINTS;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             1
-- ALTER TABLE                             27
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
